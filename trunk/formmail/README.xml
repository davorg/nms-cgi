<?xml version="1.0" encoding="iso-8859-1"?>
<nms_program prog_file="formmail" full_name="FormMail">
  <summary>
    <paragraph>
formmail is a script which allows you to receive the results of an
HTML form submission via an email message.
</paragraph>
  </summary>
  <files>
         <file>
       <filename>FormMail.pl</filename>
       <filedesc>The main Perl script</filedesc>
     </file>
     <file>
       <filename>README</filename>
       <filedesc>This file. Instructions on how to install and use formmail</filedesc>
     </file>
     <file>
       <filename>EXAMPLES</filename>
       <filedesc>Some worked examples of ways to set up formmail</filedesc>
     </file>
     <file>
       <filename>ChangeLog</filename>
       <filedesc>The change history of these files</filedesc>
     </file>
     <file>
       <filename>MANIFEST</filename>
       <filedesc>List of files</filedesc>
     </file>

  </files>
  <configuration>
    <introduction>
    <paragraph>
There are a number of variables that you can change in FormMail.pl which
alter the way that the program works.
</paragraph>
    </introduction>
    <variables>
   <variable>
      <var_name>$DEBUGGING</var_name>
      <description>
         <paragraph>
            This should be set to 1 whilst you are installing
                      and testing the script. Once the script is live you
                      should change it to 0. When set to 1, errors will
                      be output to the browser. This is a security risk and
                      should not be used when the script is live.
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>$emulate_matts_code</var_name>
      <description>
         <paragraph>
            When this variable is set to a true value (e.g. 1)
                      formmail will work in exactly the same way as its
                      counterpart at Matt's Script Archive. If it is set
                      to a false value (e.g. 0) then more advanced features
                      are switched on. We do not recommend changing this
                      variable to 1, as the resulting drop in security
                      may leave your formmail open to use as a SPAM relay.
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>$secure</var_name>
      <description>
         <paragraph>
            When this variable is set to a true value (e.g. 1)
                      many additional security features are turned on.  We
                      do not recommend changing this variable to 0, as the
                      resulting drop in security may leave your formmail
                      open to use as a SPAM relay.
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>$allow_empty_ref</var_name>
      <description>
         <paragraph>
            Some web proxies and office firewalls may strip
                      certain headers from the HTTP request that is sent
                      by a browser.  Among these is the HTTP_REFERER that
                      the program uses as an additional check of the
                      requests validity - this will cause the program to
                      fail with a 'bad referer' message even though the
                      configuration seems fine.  In these cases setting
                      this variable to 1 will stop the program from
                      complaining about requests where no referer header
                      was sent while leaving the rest of the security
                      features intact.
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>$max_recipients</var_name>
      <description>
         <paragraph>
            The maximum number of e-mail addresses that any
                      single form should be allowed to send copies of the
                      e-mail to.  If none of your forms send e-mail to more
                      than one recipient, then we recommend that you
                      improve the security of FormMail by reducing this
                      value to 1.  Setting this variable to 0 removes all
                      limits on the number of recipients of each e-mail.
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>$mailprog</var_name>
      <description>
         <paragraph>
            The system command that the script should invoke to
                      send an outgoing email. This should be the full path
                      to a program that will read a message from STDIN and
                      determine the list of message recipients from the
                      message headers. Any switches that the program
                      requires should be provided here. Your hosting
                      provider or system administrator should be able to
                      tell you what to set this variable to.
         </paragraph>
         <paragraph>
                      A $mailprog setting that works for many UNIX-like
                      hosts is:

                        $mailprog = '/usr/lib/sendmail -oi -t';

                      Some other UNIX-like hosts need:

                        $mailprog = '/usr/sbin/sendmail -oi -t';

                      For hosts that lack a suitable sendmail binary
                      (such as most Windows systems) we have a Perl 
                      script which does the job of the sendmail binary,
                      in the nms_sendmail package at 
                      <http://nms-cgi.sourceforge.net/>.  See the README
                      file in the nms_sendmail package for instructions.
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>@referers</var_name>
      <description>
         <paragraph>
            A list of referring hosts. This should be a list of
                      the names or IP addresses of all the systems that
                      will host HTML forms that refer to this formmail
                      script. Only these hosts will be allowed to use the
                      formmail script. This is needed to prevent others
                      from hijacking your formmail script for their own use
                      by linking to it from their own HTML forms.
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>@allow_mail_to</var_name>
      <description>
         <paragraph>
                    - A list of the email addresses that formmail can send
                      email to. The elements of this list can be either
                      simple email addresses (like 'you@your.domain') or
                      domain names (like 'your.domain'). If it's a domain
                      name then *any* address at the domain will be allowed.
         </paragraph>
         <paragraph>
                      Example: to allow mail to be sent to 'you@your.domain'
                      or any address at the host 'mail.your.domain', you
                      would set:

                      @allow_mail_to = qw(you@your.domain mail.your.domain);
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>@recipients</var_name>
      <description>
         <paragraph>
                      A list of Perl regular expression patterns that
                      determine who the script will allow mail to be sent
                      to in addition to those set in @allow_mail_to. This is
                      present only for compatibility with the original
                      formmail script.  We strongly advise against having
                      anything in @recipients as it's easy to make a mistake
                      with the regular expression syntax and turn your
                      formmail into an open SPAM relay.
         </paragraph>
         <paragraph>

                      There is an implicit $ at the end of the regular
                      expression, but you need to include the ^ if you want
                      it anchored at the start.  Note also that since '.' is
                      a regular expression metacharacter, you'll need to
                      escape it before using it in domain names.
         </paragraph>
         <paragraph>
                      If that last paragraph makes no sense to you then
                      please don't put anything in @recipients, stick to
                      using the less error prone @allow_mail_to.
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>%recipient_alias</var_name>
      <description>
         <paragraph>
                      A hash for predefining a list of recipients in the
                      script, and then choosing between them using the
                      recipient form field, while keeping all the email
                      addresses out of the HTML so that they don't get
                      collected by address harvesters and sent junk email.
          </paragraph>
           <paragraph>

                      For example, suppose you have three forms on your
                      site, and you want each to submit to a different email
                      address and you want to keep the addresses hidden.
                      You might set up %recipient_alias like this:
          </paragraph>
           <paragraph>

                      %recipient_alias = (
                        '1' => 'one@your.domain',
                        '2' => 'two@your.domain',
                        '3' => 'three@your.domain',
                      );
          </paragraph>
           <paragraph>

                      In the HTML form that should submit to the recipient
                      'two@your.domain', you would then set the recipient
                      with:
          </paragraph>
           <paragraph>

                      <input type="hidden" name="recipient" value="2" />
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>$locale</var_name>
      <description>
         <paragraph>
            This determines the language that is used in the date - by
                default this is blank and the language will probably be
                english. The following a list of some possible values,
                however it should be stressed that not all of these will
                be supported on all systems and also this is not a complete
                list: 

                      Catalan           ca_ES
                      Croatian          hr_HR
                      Czech             cs_CZ
                      Danish            da_DK
                      Dutc              nl_NL
                      Estonian          et_EE
                      Finnish           fi_FI
                      French            fr_FR
                      Galician          gl_ES
                      German            de_DE
                      Greek             el_GR
                      Hebrew            he_IL
                      Hungarian         hu_HU
                      Icelandic         is_IS
                      Italian           it_IT
                      Japanese          ja_JP
                      Korean            ko_KR
                      Lithuanian        lt_LT
                      Norwegian         no_NO
                      Polish            pl_PL
                      Portuguese        pt_PT
                      Romanian          ro_RO
                      Russian           ru_RU
                      Slovak            sk_SK
                      Slovenian         sl_SI
                      Spanish           es_ES
                      Swedish           sv_SE
                      Thai              th_TH
                      Turkish           tr_TR
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>$charset</var_name>
      <description>
         The character set to use for output documents.
      </description>
   </variable>
   <variable>
      <var_name>$no_content</var_name>
      <description>
         If this is set to 1 then rather than returning the HTML confirmation
         page or doing a redirect the script will output a header that
         indicates that no content will be returned and that the submitted
         form should not be replaced.  This should be used carefully as an
         unwitting visitor may click the submit button several times thinking
         that nothing has happened.
      </description>
   </variable>
   <variable>
      <var_name>@config_include</var_name>
      <description>
This optional configuration may contain a list of the
names of certain configuration form fields (as 
described below) that may be included in the body of
the e-mail that is sent and also in the confirmation
page that is returned to the visitors browser.  In
order for these fields to be actually displayed they
should be included in the value of a 'sort' field
explicitly ( along with the other fields that want to
be displayed ).  You probably want to use this sparingly
as most of the configuration fields will be meaningless
to a visitor.
      </description>
   </variable>
   <variable>
      <var_name>@valid_ENV</var_name>
      <description>
         <paragraph>
            A list of all the environment variables that you want
                      to be able to include in the email. See 'env_report'
                      below.
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>$date_fmt</var_name>
      <description>
         <paragraph>
                      The format that the date will be displayed in. This
                      is a string that contains a number of different 'tags'.
                      Each tag consists of a % character followed by a letter.
                      Each tag represents one way of displaying a particular
                      part of the date or time. Here are some common tags:
         </paragraph>
         <paragraph>
                      %Y - four digit year (2002)
                      %y - two digit year (02)
                      %m - month of the year (01 to 12)
                      %b - short month name (Jan to Dec)
                      %B - long month name (January to December)
                      %d - day of the month (01 to 31)
                      %a - short day name (Sun to Sat)
                      %A - long day name (Sunday to Saturday)
                      %H - hour in 24 hour clock (00 to 23)
                      %I - hour in 12 hour clock (01 to 12)
                      %p - AM or PM
                      %M - minutes (00 to 59)
                      %S - seconds (00 to 59)
                      %Z - the name of the local timezone
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>$style</var_name>
      <description>
         <paragraph>
            This is the URL of a CSS stylesheet which will be
                      used for script generated messages.  This should
		      probably be the same as the one that you use for all
                      the other pages.  This should be a local absolute URI
                      fragment.  Set $style to '0' or the empty string if
                      you don't want to use style sheets.
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>$send_confirmation_mail</var_name>
      <description>
         <paragraph>
                          If this flag is set to 1 then an additional email
                          will be sent to the person who submitted the
                          form.
         </paragraph>
         <paragraph>
                          CAUTION: with this feature turned on it's
                          possible for someone to put someone else's email
                          address in the form and submit it 5000 times,
                          causing this script to send a flood of email to a
                          third party.  This third party is likely to blame
                          you for the email flood attack.
         </paragraph>
      </description>
   </variable>
   <variable>
      <var_name>$confirmation_text</var_name>
      <description>
         <paragraph>
                          The header and body of the confirmation email
                          sent to the person who submits the form, if the
                          $send_confirmation_mail flag is set. We use a
                          Perl 'here document' to allow us to configure it
                          as a single block of text in the script. In the
                          example below, everything between the lines

                            $confirmation_text = <<'END_OF_CONFIRMATION';

                          and

                          END_OF_CONFIRMATION

                          is treated as part of the email. Everything
                          before the first blank line is taken as part of
                          the email header, and everything after the first
                          blank line is the body of the email.

    $confirmation_text = <<'END_OF_CONFIRMATION';
  From: you@your.com
  Subject: form submission

  Thankyou for your form submission.

  END_OF_CONFIRMATION
         </paragraph>
      </description>
   </variable>

    </variables>
  </configuration>
  <installation>
      <paragraph>
Formmail is installed simply by copying the file FormMail.pl into your
cgi-bin directory. If you don't know where your cgi-bin directory is, then
please ask your system administrator.
</paragraph>
<paragraph>
You may need to rename FormMail.pl to FormMail.cgi. Again, your system
administrator will know if this is the case.
</paragraph>
<paragraph>
You will probably need to turn on execute permissions to the file. You can
do this by running the command "chmod +x FormMail.pl" from your command
line. If you don't have command line access to your web server then there
will probably be an equivalent function in your file transfer program.
</paragraph>
<paragraph>
To make use of it, you need to write an HTML form that refers to the
FormMail script. Here's an example which will send mail to the address
'feedback@your.domain' when someone submits the form:
</paragraph>
<paragraph>
<form method="post" action="http://your.domain/cgi-bin/FormMail.pl">
  <input type="hidden" name="recipient" value="feedback@your.domain" />
  <input type="text" name="feedback" /><br />
  Please enter your comments<br />
  <input type="submit" />
</form>
</paragraph>
<paragraph>
FORM CONFIGURATION
</paragraph>
<paragraph>
See how the hidden 'recipient' input in the example above told formmail who
to send the mail to ? This is how almost all of formmail's configuration
works. Here's the full list of things you can set with hidden form inputs:
</paragraph>
<paragraph>
recipient               - The email address to which the form submission
                          should be sent. If you would like it copied to
                          more than one recipient then you can separate
                          multiple email addresses with commas, for
                          example:
</paragraph>
<paragraph>
                          <input type="hidden" name="recipient"
                                value="you@your.domain,me@your.domain" />
</paragraph>
<paragraph>
                          If you leave the 'recipient' field out of the
                          form, formmail will send to the first address
                          listed in the @allow_mail_to configuration
                          variable (see above).  This allows you to avoid
                          putting your email address in the form, which
                          might be desirable if you're concerned about
                          address harvesters collecting it and sending
                          you SPAM. This feature is disabled if the
                          $emulate_matts_code configuration variable is
                          set to 0.
</paragraph>
<paragraph>
subject                 - The subject line for the email. For example:
</paragraph>
<paragraph>
                          <input type="hidden" name="subject"
                                value="From the feedback form" />
</paragraph>
<paragraph>
redirect                - If this value is present it should be a URL, and
                          the user will be redirected there after a
                          successful form submission.  For example:
</paragraph>
<paragraph>
                          <input type="hidden" name="redirect"
                           value="http://www.your.domain/foo.html" />
</paragraph>
<paragraph>
                          If you don't specify a redirect URL then instead
                          of redirecting formmail will generate a success
                          page telling the user that their submission was
                          successful.
</paragraph>
<paragraph>
bgcolor                 - The background color for the success page.
</paragraph>
<paragraph>
background              - The URL of the background image for the success
                          page.
</paragraph>
<paragraph>
text_color              - The text color for the success page.
</paragraph>
<paragraph>
link_color              - The link color for the success page.
</paragraph>
<paragraph>
vlink_color             - The vlink color for the success page.
</paragraph>
<paragraph>
alink_color             - The alink color for the success page.
</paragraph>
<paragraph>
title                   - The title for the success page.
</paragraph>
<paragraph>
return_link_url         - The target URL for a link at the end of the
                          success page. This is normally used to provide
                          a link from the success page back to your main
                          page or back to the page with the form on. For
                          example:
</paragraph>
<paragraph>
                          <input type="hidden" name="return_link_url"
                           value="/home.html" />
</paragraph>
<paragraph>
return_link_title       - The label for the return link.  For example:
</paragraph>
<paragraph>
                          <input type="hidden" name="return_link_title"
                           value="Back to my home page" />
</paragraph>
<paragraph>
sort                    - This sets the order in which the submitted form
                          inputs will appear in the email and on the
                          success page.  It can be the string 'alphabetic'
                          for alphabetic order, or the string "order:"
                          followed by a comma separated list of the input
                          names, for example:
</paragraph>
<paragraph>
                          <input type="hidden" name="sort"
                           value="order:name,email,age,comments">
</paragraph>
<paragraph>
                         If "order:" is used you must supply the names of
                         all of the fields that you want to be in the body of
                         the mail message.
</paragraph
<paragraph>
print_config            - This is mainly used for debugging, and if set it
                          causes formmail to include a dump of the
                          specified configuration settings in the email.
                          For example:
</paragraph>
<paragraph>
                          <input type="hidden" name="print_config"
                           value="title,sort">
</paragraph>
<paragraph>
                          ... will include whatever values you set for
                          'title' and 'sort' (if any) in the email.
</paragraph>
<paragraph>
required                - This is a list of fields that the user must fill
                          in before they submit the form. If they leave
                          any of these fields blank then they will be sent
                          back to the form to try again.  For example:
</paragraph>
<paragraph>
                          <input type="hidden" name="required"
                           value="name,comments">
</paragraph>
<paragraph>
missing_fields_redirect - If this is set, it must be a URL, and the user
                          will be redirected there if any of the fields
                          listed in 'required' are left blank. Use this if
                          you want finer control over the the error that
                          the user see's if they miss out a field.
</paragraph>
<paragraph>
env_report              - This is a list of the CGI environment variables
                          that should be included in the email.  This is
                          useful for recording things like the IP address
                          of the user in the email. Any environment
                          variables that you want to use in 'env_report' in
                          any of your forms will need to be in the
                          @valid_ENV configuration variable described
                          above.
</paragraph>
<paragraph>
print_blank_fields      - If this is set then fields that the user left
                          blank will be included in the email.  Normally,
                          blank fields are suppressed to save space.
</paragraph>
<paragraph>
As well as all these hidden inputs, there are a couple of non-hidden
inputs which get special treatment:
</paragraph>
<paragraph>
email    - If one of the things you're asking the user to fill in is their
           email address and you call that input 'email', formmail will use
           it as the address part of the sender's email address in the
           email.
</paragraph>
<paragraph>
realname - If one of the things you're asking the user to fill in is their
           full name and you call that input 'realname', formmail will use
           it as the name part of the sender's email address in the email.
</paragraph>
<paragraph>
COMMON PROBLEMS
</paragraph>
<paragraph>
* Confusion over the qw operator
</paragraph>
<paragraph>
In the configuration section at the top of FormMail, we set
the default list of allowed referers with this line of code:
</paragraph>
<paragraph>
   @referers = qw(dave.org.uk 209.207.222.64 localhost);
</paragraph>
<paragraph>
This use of the qw() operator is one way to write lists of
strings in Perl.  Another way is like this:
</paragraph>
<paragraph>
   @referers = ('dave.org.uk','209.207.222.64','localhost');
</paragraph>
<paragraph>
We prefer the first version because it allows use to leave out
the quote character, but the second version is perfectly valid
and works exactly the same as the qw() version.  You should
use whichever version you feel most comfortable with.  Neither
is better or worse than the other.
</paragraph>
<paragraph>
What you must not do is try to mix the two, and end up with
something like:
</paragraph>
<paragraph>
   @referers = qw('dave.org.uk','209.207.222.64','localhost');
</paragraph>
<paragraph>
This will not work, and you will see unexpected behavior.  In
the case of @referers, the script will always display a
"bad referer" error page.
</paragraph>
<paragraph>
* Sendmail switches removed
</paragraph>
<paragraph>
In the configuration section at the top of FormMail, we set
the default mail program to sendmail with this code:
</paragraph>
<paragraph>
   $mailprog          = '/usr/lib/sendmail -oi -t';
</paragraph>
<paragraph>
This is actually two different pieces of information; the
location of the sendmail binary (/usr/lib/sendmail) and
the command line switches that must be passed to it in order
for it to read the list of message recipients from the
message header (-oi -t).
</paragraph>
<paragraph>
If your hosting provider or system administrator tells you that
sendmail is /usr/sbin/sendmail on your system, then you must
change the $mailprog line to:
</paragraph>
<paragraph>
   $mailprog          = '/usr/sbin/sendmail -oi -t';
</paragraph>
<paragraph>
and not:
</paragraph>
<paragraph>
   $mailprog          = '/usr/sbin/sendmail';
</paragraph>
<paragraph>


</paragraph>
  </installation>
</nms_program>
