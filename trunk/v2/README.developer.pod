=head1 NAME

README.developer - guide to /v2 for NMS developers

=head1 DESCRIPTION

The F</v2> directory in the NMS CVS tree is an attempt to move 
the bulk of the code into C<CGI::NMS::*> modules, with release
time scripts to build standalone versions of all of the CGIs
by inlining the modules into them.

The primary consequence of this change is that the contents of
the C<.tar.gz> and C<.zip> archives are nolonger basically just
a bunch of source files straight out of a directory in a CVS
working copy.

That necessitates several changes to the release process:

=over

=item changelog generation

The ChangeLog files can nolonger be generated from a simple
C<cvs log> of a package directory.  Each package now has its
own list of the source files and build tools that might effect
the contents of its C<tar.gz> and C<zip> file, and the
changelog for each package is generated from the C<cvs log>
output for those source files only.

=item version numbering

There is nolonger a single primary file in each package, so we
can nolonger take version numbers straight from CVS revisions.
For ease and simplicity, versioning is now all based on the
date of the most recent change to a source file that effected
the particular package, in C<yyyy-dd-mm-hhmm> format.

The release scripts determine the version number by looking for
the most recent change in the ChangeLog.

=item testing

As the packaged files that the end users get become less similar
to the source files in CVS, regression tests applied just to the
source files loose some value.

To claw back some of the relevance of the regression tests, the
release scripts now unpack the packages they generate and run the
tests against the contents before uploading.

=back

=head1 DIRECTORY LAYOUT

The most important subdirectories of F</v2> are:

=over

=item lib

All C<.pm> files go under here, both our custom ones and any 3rd
party modules that we bundle such as L<MIME::Lite>.

=item src

The source and documentation for each script.  Anything that is
specific to a single script should be under here in the script's
subdirectory.

=item package

Makefile and bits of source for each different packaging option
of each script.  For example, bits specific to the package of
formmail with the modules supplied as separate files would go in
V</v2/package/formmail_modules/> and bits specific to the
compatibility package of formmail with inlined modules would go
in V</v2/package/formmail_compat/>.

=item buildtools

Scripts and Makefile segments used for testing, constructing
and releasing packages.

=item tests

Regression tests for each script.

=back

=head1 RELEASE REQUIREMENTS

In order to build and upload a release, you will need:

=over

=item *

Standard UNIX command line tools, such as make, rm, mkdir, scp and so on.

=item *

Template Toolkit

=item *

One or more perl interpreters

=back

=head1 ENVIRONMENT VARIABLES

You must define the following environment variables:

=over

=item NMS_WORKING_COPY

The full filesystem path to the root of a CVS working copy against
the NMS CVS tree.  For example, F</home/nick/nms/w>.

=item NMS_SOURCEFORGE_USERNAME

Your username at sourceforge, used for uploads via ssh.  For example,
C<nickjc>.

=item NMS_TEST_PERL

The full path to the primary perl binary to use for testing the script,
e.g. F</usr/local/perl-500404/bin/perl>.

=item NMS_MORE_TEST_PERLS

A space separated list of any other available perl binaries on your
system.  The test scripts will run the test suite under each of these
as well as NMS_TEST_PERL in turn when you do C<make multitest> and
when you make a release.

=back
